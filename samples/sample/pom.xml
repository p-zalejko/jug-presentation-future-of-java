<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>pawel.zalejko</groupId>
    <artifactId>sample</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>sample</name>
    <description>Demo project</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <spring-boot-dependencies.version>2.1.1.RELEASE</spring-boot-dependencies.version>
        <jzlib.version>1.1.3</jzlib.version>
        <reactor-netty.version>0.8.3.RELEASE</reactor-netty.version>
        <aspectjweaver.version>1.9.1</aspectjweaver.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jzlib</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.netty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.projectreactor.netty</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.netty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.projectreactor.netty</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.netty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.projectreactor.netty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>*</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.netty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>netty-transport-native-epoll</artifactId>
                    <groupId>io.projectreactor.netty</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jzlib</artifactId>
                <version>${jzlib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.netty</groupId>
                <artifactId>reactor-netty</artifactId>
                <version>${reactor-netty.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot-dependencies.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>java8</id>
            <properties>
                <maven.compiler.source>8</maven.compiler.source>
                <maven.compiler.target>8</maven.compiler.target>
            </properties>
            <build>
                <plugins>
                    <!-- build app for graalVM with Java8 -->
                    <!-- java 11 is not supported yet https://github.com/oracle/graal/issues/651 -->

                    <!--https://github.com/spotify/dockerfile-maven/issues/209-->
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>image0</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-graalvm-native-image</imageName>
                                    <dockerDirectory>dockerfiles/graalvm-native-image</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image1</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-aws-corretto</imageName>
                                    <dockerDirectory>dockerfiles/aws-corretto</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <imageName>jug-graalvm</imageName>
                            <dockerDirectory>dockerfiles/graalvm</dockerDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                            </resources>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>java11</id>
            <properties>
                <maven.compiler.source>11</maven.compiler.source>
                <maven.compiler.target>11</maven.compiler.target>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>--add-exports=java.base/jdk.internal.platform=ALL-UNNAMED</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>image1</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-adoptopenjdk-11-hotspot</imageName>
                                    <dockerDirectory>dockerfiles/adoptOpenJDK11-hotspot</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image2</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-adoptopenjdk-11-openj9</imageName>
                                    <dockerDirectory>dockerfiles/adoptOpenJDK11-openj9</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image3</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-openjdk-11-zulu</imageName>
                                    <dockerDirectory>dockerfiles/openjdk11-zulu</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image5</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-adoptopenjdk-11-hotspot-alpine-slim</imageName>
                                    <dockerDirectory>dockerfiles/adoptOpenJDK11-hotspot-alpine-slim</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image6</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-adoptopenjdk-11-jlink</imageName>
                                    <dockerDirectory>dockerfiles/adoptOpenJDK11-hotspot-jlink</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image7</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-openjdk-11-jre-slim-stretch</imageName>
                                    <dockerDirectory>dockerfiles/openjdk11-jre-slim-stretch</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>image8</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <imageName>jug-openjdk-pzalejko-11</imageName>
                                    <dockerDirectory>dockerfiles/diy-openjdk</dockerDirectory>
                                    <resources>
                                        <resource>
                                            <targetPath>/</targetPath>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                        </resource>
                                    </resources>
                                    <buildArgs>
                                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                    </buildArgs>
                                </configuration>
                            </execution>
                        </executions>
                        <!--mvn clean package docker:build-->
                        <configuration>
                            <imageName>jug-openjdk-11-oracle</imageName>
                            <dockerDirectory>dockerfiles/openjdk11-oracle</dockerDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                            </resources>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>multi-release-jar</id>
            <properties>
                <java11.sourceDirectory>${project.basedir}/src/main/java11</java11.sourceDirectory>
                <java11.build.outputDirectory>${project.build.directory}/classes-java11</java11.build.outputDirectory>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>compile-java11</id>
                                <phase>compile</phase>
                                <configuration>
                                    <tasks>
                                        <mkdir dir="${java11.build.outputDirectory}"/>
                                        <javac srcdir="${java11.sourceDirectory}"
                                               destdir="${java11.build.outputDirectory}"
                                               classpath="${project.build.outputDirectory}"
                                               includeantruntime="false">

                                            <compilerarg
                                                    line="--add-exports=java.base/jdk.internal.platform=ALL-UNNAMED"/>
                                        </javac>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/META-INF/versions/11
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${java11.build.outputDirectory}</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.2.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
